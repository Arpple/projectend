//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UnitEntity {

    static readonly Game.DeadComponent gameDeadComponent = new Game.DeadComponent();

    public bool isGameDead {
        get { return HasComponent(UnitComponentsLookup.GameDead); }
        set {
            if(value != isGameDead) {
                if(value) {
                    AddComponent(UnitComponentsLookup.GameDead, gameDeadComponent);
                } else {
                    RemoveComponent(UnitComponentsLookup.GameDead);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UnitMatcher {

    static Entitas.IMatcher<UnitEntity> _matcherGameDead;

    public static Entitas.IMatcher<UnitEntity> GameDead {
        get {
            if(_matcherGameDead == null) {
                var matcher = (Entitas.Matcher<UnitEntity>)Entitas.Matcher<UnitEntity>.AllOf(UnitComponentsLookup.GameDead);
                matcher.componentNames = UnitComponentsLookup.componentNames;
                _matcherGameDead = matcher;
            }

            return _matcherGameDead;
        }
    }
}
