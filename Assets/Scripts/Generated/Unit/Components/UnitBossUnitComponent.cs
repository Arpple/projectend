//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UnitContext {

    public UnitEntity bossUnitEntity { get { return GetGroup(UnitMatcher.BossUnit).GetSingleEntity(); } }
    public BossUnitComponent bossUnit { get { return bossUnitEntity.bossUnit; } }
    public bool hasBossUnit { get { return bossUnitEntity != null; } }

    public UnitEntity SetBossUnit(Boss newType) {
        if(hasBossUnit) {
            throw new Entitas.EntitasException("Could not set BossUnit!\n" + this + " already has an entity with BossUnitComponent!",
                "You should check if the context already has a bossUnitEntity before setting it or use context.ReplaceBossUnit().");
        }
        var entity = CreateEntity();
        entity.AddBossUnit(newType);
        return entity;
    }

    public void ReplaceBossUnit(Boss newType) {
        var entity = bossUnitEntity;
        if(entity == null) {
            entity = SetBossUnit(newType);
        } else {
            entity.ReplaceBossUnit(newType);
        }
    }

    public void RemoveBossUnit() {
        DestroyEntity(bossUnitEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class UnitEntity {

    public BossUnitComponent bossUnit { get { return (BossUnitComponent)GetComponent(UnitComponentsLookup.BossUnit); } }
    public bool hasBossUnit { get { return HasComponent(UnitComponentsLookup.BossUnit); } }

    public void AddBossUnit(Boss newType) {
        var index = UnitComponentsLookup.BossUnit;
        var component = CreateComponent<BossUnitComponent>(index);
        component.Type = newType;
        AddComponent(index, component);
    }

    public void ReplaceBossUnit(Boss newType) {
        var index = UnitComponentsLookup.BossUnit;
        var component = CreateComponent<BossUnitComponent>(index);
        component.Type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveBossUnit() {
        RemoveComponent(UnitComponentsLookup.BossUnit);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class UnitMatcher {

    static Entitas.IMatcher<UnitEntity> _matcherBossUnit;

    public static Entitas.IMatcher<UnitEntity> BossUnit {
        get {
            if(_matcherBossUnit == null) {
                var matcher = (Entitas.Matcher<UnitEntity>)Entitas.Matcher<UnitEntity>.AllOf(UnitComponentsLookup.BossUnit);
                matcher.componentNames = UnitComponentsLookup.componentNames;
                _matcherBossUnit = matcher;
            }

            return _matcherBossUnit;
        }
    }
}
