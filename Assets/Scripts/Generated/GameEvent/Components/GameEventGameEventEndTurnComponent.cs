//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEventEntity {

    static readonly Game.EventEndTurn gameEventEndTurnComponent = new Game.EventEndTurn();

    public bool isGameEventEndTurn {
        get { return HasComponent(GameEventComponentsLookup.GameEventEndTurn); }
        set {
            if(value != isGameEventEndTurn) {
                if(value) {
                    AddComponent(GameEventComponentsLookup.GameEventEndTurn, gameEventEndTurnComponent);
                } else {
                    RemoveComponent(GameEventComponentsLookup.GameEventEndTurn);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameEventMatcher {

    static Entitas.IMatcher<GameEventEntity> _matcherGameEventEndTurn;

    public static Entitas.IMatcher<GameEventEntity> GameEventEndTurn {
        get {
            if(_matcherGameEventEndTurn == null) {
                var matcher = (Entitas.Matcher<GameEventEntity>)Entitas.Matcher<GameEventEntity>.AllOf(GameEventComponentsLookup.GameEventEndTurn);
                matcher.componentNames = GameEventComponentsLookup.componentNames;
                _matcherGameEventEndTurn = matcher;
            }

            return _matcherGameEventEndTurn;
        }
    }
}
