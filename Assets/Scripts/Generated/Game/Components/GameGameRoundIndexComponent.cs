//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameRoundIndexEntity { get { return GetGroup(GameMatcher.GameRoundIndex).GetSingleEntity(); } }
    public Game.RoundIndexComponent gameRoundIndex { get { return gameRoundIndexEntity.gameRoundIndex; } }
    public bool hasGameRoundIndex { get { return gameRoundIndexEntity != null; } }

    public GameEntity SetGameRoundIndex(int newIndex) {
        if(hasGameRoundIndex) {
            throw new Entitas.EntitasException("Could not set GameRoundIndex!\n" + this + " already has an entity with Game.RoundIndexComponent!",
                "You should check if the context already has a gameRoundIndexEntity before setting it or use context.ReplaceGameRoundIndex().");
        }
        var entity = CreateEntity();
        entity.AddGameRoundIndex(newIndex);
        return entity;
    }

    public void ReplaceGameRoundIndex(int newIndex) {
        var entity = gameRoundIndexEntity;
        if(entity == null) {
            entity = SetGameRoundIndex(newIndex);
        } else {
            entity.ReplaceGameRoundIndex(newIndex);
        }
    }

    public void RemoveGameRoundIndex() {
        DestroyEntity(gameRoundIndexEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.RoundIndexComponent gameRoundIndex { get { return (Game.RoundIndexComponent)GetComponent(GameComponentsLookup.GameRoundIndex); } }
    public bool hasGameRoundIndex { get { return HasComponent(GameComponentsLookup.GameRoundIndex); } }

    public void AddGameRoundIndex(int newIndex) {
        var index = GameComponentsLookup.GameRoundIndex;
        var component = CreateComponent<Game.RoundIndexComponent>(index);
        component.Index = newIndex;
        AddComponent(index, component);
    }

    public void ReplaceGameRoundIndex(int newIndex) {
        var index = GameComponentsLookup.GameRoundIndex;
        var component = CreateComponent<Game.RoundIndexComponent>(index);
        component.Index = newIndex;
        ReplaceComponent(index, component);
    }

    public void RemoveGameRoundIndex() {
        RemoveComponent(GameComponentsLookup.GameRoundIndex);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameRoundIndex;

    public static Entitas.IMatcher<GameEntity> GameRoundIndex {
        get {
            if(_matcherGameRoundIndex == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameRoundIndex);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameRoundIndex = matcher;
            }

            return _matcherGameRoundIndex;
        }
    }
}
