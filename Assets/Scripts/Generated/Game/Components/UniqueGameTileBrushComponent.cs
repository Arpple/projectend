//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Entitas;

public partial class GameContext {

    public GameEntity tileBrushEntity { get { return GetGroup(GameMatcher.TileBrush).GetSingleEntity(); } }
    public End.MapEditor.TileBrushComponent tileBrush { get { return tileBrushEntity.tileBrush; } }
    public bool hasTileBrush { get { return tileBrushEntity != null; } }

    public GameEntity SetTileBrush(End.Tile newTileType, End.MapEditor.BrushAction newAction) {
        if(hasTileBrush) {
            throw new EntitasException("Could not set tileBrush!\n" + this + " already has an entity with TileBrushComponent!",
                "You should check if the context already has a tileBrushEntity before setting it or use context.ReplaceTileBrush().");
        }
        var entity = CreateEntity();
        entity.AddTileBrush(newTileType, newAction);
        return entity;
    }

    public void ReplaceTileBrush(End.Tile newTileType, End.MapEditor.BrushAction newAction) {
        var entity = tileBrushEntity;
        if(entity == null) {
            entity = SetTileBrush(newTileType, newAction);
        } else {
            entity.ReplaceTileBrush(newTileType, newAction);
        }
    }

    public void RemoveTileBrush() {
        DestroyEntity(tileBrushEntity);
    }
}
