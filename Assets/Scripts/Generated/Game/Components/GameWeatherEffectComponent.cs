//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WeatherEffectComponent weatherEffect { get { return (WeatherEffectComponent)GetComponent(GameComponentsLookup.WeatherEffect); } }
    public bool hasWeatherEffect { get { return HasComponent(GameComponentsLookup.WeatherEffect); } }

    public void AddWeatherEffect(Weather newType, WeatherDisplayEffect newEffect) {
        var index = GameComponentsLookup.WeatherEffect;
        var component = CreateComponent<WeatherEffectComponent>(index);
        component.Type = newType;
        component.Effect = newEffect;
        AddComponent(index, component);
    }

    public void ReplaceWeatherEffect(Weather newType, WeatherDisplayEffect newEffect) {
        var index = GameComponentsLookup.WeatherEffect;
        var component = CreateComponent<WeatherEffectComponent>(index);
        component.Type = newType;
        component.Effect = newEffect;
        ReplaceComponent(index, component);
    }

    public void RemoveWeatherEffect() {
        RemoveComponent(GameComponentsLookup.WeatherEffect);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeatherEffect;

    public static Entitas.IMatcher<GameEntity> WeatherEffect {
        get {
            if(_matcherWeatherEffect == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeatherEffect);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeatherEffect = matcher;
            }

            return _matcherWeatherEffect;
        }
    }
}
