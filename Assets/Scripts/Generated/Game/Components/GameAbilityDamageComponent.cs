//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AbilityDamageComponent abilityDamage { get { return (AbilityDamageComponent)GetComponent(GameComponentsLookup.AbilityDamage); } }
    public bool hasAbilityDamage { get { return HasComponent(GameComponentsLookup.AbilityDamage); } }

    public void AddAbilityDamage(int newDamage, bool newCanMakeDead) {
        var index = GameComponentsLookup.AbilityDamage;
        var component = CreateComponent<AbilityDamageComponent>(index);
        component.damage = newDamage;
        component.canMakeDead = newCanMakeDead;
        AddComponent(index, component);
    }

    public void ReplaceAbilityDamage(int newDamage, bool newCanMakeDead) {
        var index = GameComponentsLookup.AbilityDamage;
        var component = CreateComponent<AbilityDamageComponent>(index);
        component.damage = newDamage;
        component.canMakeDead = newCanMakeDead;
        ReplaceComponent(index, component);
    }

    public void RemoveAbilityDamage() {
        RemoveComponent(GameComponentsLookup.AbilityDamage);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAbilityDamage;

    public static Entitas.IMatcher<GameEntity> AbilityDamage {
        get {
            if(_matcherAbilityDamage == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AbilityDamage);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAbilityDamage = matcher;
            }

            return _matcherAbilityDamage;
        }
    }
}
