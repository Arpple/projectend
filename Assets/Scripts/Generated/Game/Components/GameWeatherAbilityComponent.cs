//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WeatherAbilityComponent weatherAbility { get { return (WeatherAbilityComponent)GetComponent(GameComponentsLookup.WeatherAbility); } }
    public bool hasWeatherAbility { get { return HasComponent(GameComponentsLookup.WeatherAbility); } }

    public void AddWeatherAbility(WeatherAbility newAbility) {
        var index = GameComponentsLookup.WeatherAbility;
        var component = CreateComponent<WeatherAbilityComponent>(index);
        component.Ability = newAbility;
        AddComponent(index, component);
    }

    public void ReplaceWeatherAbility(WeatherAbility newAbility) {
        var index = GameComponentsLookup.WeatherAbility;
        var component = CreateComponent<WeatherAbilityComponent>(index);
        component.Ability = newAbility;
        ReplaceComponent(index, component);
    }

    public void RemoveWeatherAbility() {
        RemoveComponent(GameComponentsLookup.WeatherAbility);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeatherAbility;

    public static Entitas.IMatcher<GameEntity> WeatherAbility {
        get {
            if(_matcherWeatherAbility == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeatherAbility);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeatherAbility = matcher;
            }

            return _matcherWeatherAbility;
        }
    }
}
