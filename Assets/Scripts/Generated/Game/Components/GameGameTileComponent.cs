//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.TileComponent gameTile { get { return (Game.TileComponent)GetComponent(GameComponentsLookup.GameTile); } }
    public bool hasGameTile { get { return HasComponent(GameComponentsLookup.GameTile); } }

    public void AddGameTile(Game.Tile newType) {
        var index = GameComponentsLookup.GameTile;
        var component = CreateComponent<Game.TileComponent>(index);
        component.Type = newType;
        AddComponent(index, component);
    }

    public void ReplaceGameTile(Game.Tile newType) {
        var index = GameComponentsLookup.GameTile;
        var component = CreateComponent<Game.TileComponent>(index);
        component.Type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveGameTile() {
        RemoveComponent(GameComponentsLookup.GameTile);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameTile;

    public static Entitas.IMatcher<GameEntity> GameTile {
        get {
            if(_matcherGameTile == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameTile);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameTile = matcher;
            }

            return _matcherGameTile;
        }
    }
}
