//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WeatherEffectDictionaryComponent weatherEffectDictionary { get { return (WeatherEffectDictionaryComponent)GetComponent(GameComponentsLookup.WeatherEffectDictionary); } }
    public bool hasWeatherEffectDictionary { get { return HasComponent(GameComponentsLookup.WeatherEffectDictionary); } }

    public void AddWeatherEffectDictionary(System.Collections.Generic.Dictionary<Weather, WeatherDisplayEffect> newDataSet) {
        var index = GameComponentsLookup.WeatherEffectDictionary;
        var component = CreateComponent<WeatherEffectDictionaryComponent>(index);
        component.DataSet = newDataSet;
        AddComponent(index, component);
    }

    public void ReplaceWeatherEffectDictionary(System.Collections.Generic.Dictionary<Weather, WeatherDisplayEffect> newDataSet) {
        var index = GameComponentsLookup.WeatherEffectDictionary;
        var component = CreateComponent<WeatherEffectDictionaryComponent>(index);
        component.DataSet = newDataSet;
        ReplaceComponent(index, component);
    }

    public void RemoveWeatherEffectDictionary() {
        RemoveComponent(GameComponentsLookup.WeatherEffectDictionary);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeatherEffectDictionary;

    public static Entitas.IMatcher<GameEntity> WeatherEffectDictionary {
        get {
            if(_matcherWeatherEffectDictionary == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeatherEffectDictionary);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeatherEffectDictionary = matcher;
            }

            return _matcherWeatherEffectDictionary;
        }
    }
}
