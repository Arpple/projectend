//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gamePlayingOrderEntity { get { return GetGroup(GameMatcher.GamePlayingOrder).GetSingleEntity(); } }
    public Game.PlayingOrderComponent gamePlayingOrder { get { return gamePlayingOrderEntity.gamePlayingOrder; } }
    public bool hasGamePlayingOrder { get { return gamePlayingOrderEntity != null; } }

    public GameEntity SetGamePlayingOrder(System.Collections.Generic.List<GameEntity> newPlayerOrder) {
        if(hasGamePlayingOrder) {
            throw new Entitas.EntitasException("Could not set GamePlayingOrder!\n" + this + " already has an entity with Game.PlayingOrderComponent!",
                "You should check if the context already has a gamePlayingOrderEntity before setting it or use context.ReplaceGamePlayingOrder().");
        }
        var entity = CreateEntity();
        entity.AddGamePlayingOrder(newPlayerOrder);
        return entity;
    }

    public void ReplaceGamePlayingOrder(System.Collections.Generic.List<GameEntity> newPlayerOrder) {
        var entity = gamePlayingOrderEntity;
        if(entity == null) {
            entity = SetGamePlayingOrder(newPlayerOrder);
        } else {
            entity.ReplaceGamePlayingOrder(newPlayerOrder);
        }
    }

    public void RemoveGamePlayingOrder() {
        DestroyEntity(gamePlayingOrderEntity);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.PlayingOrderComponent gamePlayingOrder { get { return (Game.PlayingOrderComponent)GetComponent(GameComponentsLookup.GamePlayingOrder); } }
    public bool hasGamePlayingOrder { get { return HasComponent(GameComponentsLookup.GamePlayingOrder); } }

    public void AddGamePlayingOrder(System.Collections.Generic.List<GameEntity> newPlayerOrder) {
        var index = GameComponentsLookup.GamePlayingOrder;
        var component = CreateComponent<Game.PlayingOrderComponent>(index);
        component.PlayerOrder = newPlayerOrder;
        AddComponent(index, component);
    }

    public void ReplaceGamePlayingOrder(System.Collections.Generic.List<GameEntity> newPlayerOrder) {
        var index = GameComponentsLookup.GamePlayingOrder;
        var component = CreateComponent<Game.PlayingOrderComponent>(index);
        component.PlayerOrder = newPlayerOrder;
        ReplaceComponent(index, component);
    }

    public void RemoveGamePlayingOrder() {
        RemoveComponent(GameComponentsLookup.GamePlayingOrder);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGamePlayingOrder;

    public static Entitas.IMatcher<GameEntity> GamePlayingOrder {
        get {
            if(_matcherGamePlayingOrder == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GamePlayingOrder);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGamePlayingOrder = matcher;
            }

            return _matcherGamePlayingOrder;
        }
    }
}
