//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TurnNodeComponent turnNode { get { return (TurnNodeComponent)GetComponent(GameComponentsLookup.TurnNode); } }
    public bool hasTurnNode { get { return HasComponent(GameComponentsLookup.TurnNode); } }

    public void AddTurnNode(TurnNode newObject) {
        var index = GameComponentsLookup.TurnNode;
        var component = CreateComponent<TurnNodeComponent>(index);
        component.Object = newObject;
        AddComponent(index, component);
    }

    public void ReplaceTurnNode(TurnNode newObject) {
        var index = GameComponentsLookup.TurnNode;
        var component = CreateComponent<TurnNodeComponent>(index);
        component.Object = newObject;
        ReplaceComponent(index, component);
    }

    public void RemoveTurnNode() {
        RemoveComponent(GameComponentsLookup.TurnNode);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTurnNode;

    public static Entitas.IMatcher<GameEntity> TurnNode {
        get {
            if(_matcherTurnNode == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TurnNode);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTurnNode = matcher;
            }

            return _matcherTurnNode;
        }
    }
}
