//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.AbilityComponent gameAbility { get { return (Game.AbilityComponent)GetComponent(GameComponentsLookup.GameAbility); } }
    public bool hasGameAbility { get { return HasComponent(GameComponentsLookup.GameAbility); } }

    public void AddGameAbility(string newAbilityClassName, Game.Ability newAbility) {
        var index = GameComponentsLookup.GameAbility;
        var component = CreateComponent<Game.AbilityComponent>(index);
        component.AbilityClassName = newAbilityClassName;
        component.Ability = newAbility;
        AddComponent(index, component);
    }

    public void ReplaceGameAbility(string newAbilityClassName, Game.Ability newAbility) {
        var index = GameComponentsLookup.GameAbility;
        var component = CreateComponent<Game.AbilityComponent>(index);
        component.AbilityClassName = newAbilityClassName;
        component.Ability = newAbility;
        ReplaceComponent(index, component);
    }

    public void RemoveGameAbility() {
        RemoveComponent(GameComponentsLookup.GameAbility);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameAbility;

    public static Entitas.IMatcher<GameEntity> GameAbility {
        get {
            if(_matcherGameAbility == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameAbility);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameAbility = matcher;
            }

            return _matcherGameAbility;
        }
    }
}
