//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public WeatherDataComponent weatherData { get { return (WeatherDataComponent)GetComponent(GameComponentsLookup.WeatherData); } }
    public bool hasWeatherData { get { return HasComponent(GameComponentsLookup.WeatherData); } }

    public void AddWeatherData(WeatherAbilityComponent newAbility, WeatherEffectComponent newEffect) {
        var index = GameComponentsLookup.WeatherData;
        var component = CreateComponent<WeatherDataComponent>(index);
        component.ability = newAbility;
        component.effect = newEffect;
        AddComponent(index, component);
    }

    public void ReplaceWeatherData(WeatherAbilityComponent newAbility, WeatherEffectComponent newEffect) {
        var index = GameComponentsLookup.WeatherData;
        var component = CreateComponent<WeatherDataComponent>(index);
        component.ability = newAbility;
        component.effect = newEffect;
        ReplaceComponent(index, component);
    }

    public void RemoveWeatherData() {
        RemoveComponent(GameComponentsLookup.WeatherData);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWeatherData;

    public static Entitas.IMatcher<GameEntity> WeatherData {
        get {
            if(_matcherWeatherData == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WeatherData);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWeatherData = matcher;
            }

            return _matcherWeatherData;
        }
    }
}
