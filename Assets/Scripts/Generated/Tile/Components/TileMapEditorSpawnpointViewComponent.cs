//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TileEntity {

    public MapEditor.SpawnpointViewComponent mapEditorSpawnpointView { get { return (MapEditor.SpawnpointViewComponent)GetComponent(TileComponentsLookup.MapEditorSpawnpointView); } }
    public bool hasMapEditorSpawnpointView { get { return HasComponent(TileComponentsLookup.MapEditorSpawnpointView); } }

    public void AddMapEditorSpawnpointView(UnityEngine.GameObject newGameObject) {
        var index = TileComponentsLookup.MapEditorSpawnpointView;
        var component = CreateComponent<MapEditor.SpawnpointViewComponent>(index);
        component.GameObject = newGameObject;
        AddComponent(index, component);
    }

    public void ReplaceMapEditorSpawnpointView(UnityEngine.GameObject newGameObject) {
        var index = TileComponentsLookup.MapEditorSpawnpointView;
        var component = CreateComponent<MapEditor.SpawnpointViewComponent>(index);
        component.GameObject = newGameObject;
        ReplaceComponent(index, component);
    }

    public void RemoveMapEditorSpawnpointView() {
        RemoveComponent(TileComponentsLookup.MapEditorSpawnpointView);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TileMatcher {

    static Entitas.IMatcher<TileEntity> _matcherMapEditorSpawnpointView;

    public static Entitas.IMatcher<TileEntity> MapEditorSpawnpointView {
        get {
            if(_matcherMapEditorSpawnpointView == null) {
                var matcher = (Entitas.Matcher<TileEntity>)Entitas.Matcher<TileEntity>.AllOf(TileComponentsLookup.MapEditorSpawnpointView);
                matcher.componentNames = TileComponentsLookup.componentNames;
                _matcherMapEditorSpawnpointView = matcher;
            }

            return _matcherMapEditorSpawnpointView;
        }
    }
}
