//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TileEntity {

    public Game.SpriteComponent gameSprite { get { return (Game.SpriteComponent)GetComponent(TileComponentsLookup.GameSprite); } }
    public bool hasGameSprite { get { return HasComponent(TileComponentsLookup.GameSprite); } }

    public void AddGameSprite(UnityEngine.Sprite newSprite) {
        var index = TileComponentsLookup.GameSprite;
        var component = CreateComponent<Game.SpriteComponent>(index);
        component.Sprite = newSprite;
        AddComponent(index, component);
    }

    public void ReplaceGameSprite(UnityEngine.Sprite newSprite) {
        var index = TileComponentsLookup.GameSprite;
        var component = CreateComponent<Game.SpriteComponent>(index);
        component.Sprite = newSprite;
        ReplaceComponent(index, component);
    }

    public void RemoveGameSprite() {
        RemoveComponent(TileComponentsLookup.GameSprite);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TileMatcher {

    static Entitas.IMatcher<TileEntity> _matcherGameSprite;

    public static Entitas.IMatcher<TileEntity> GameSprite {
        get {
            if(_matcherGameSprite == null) {
                var matcher = (Entitas.Matcher<TileEntity>)Entitas.Matcher<TileEntity>.AllOf(TileComponentsLookup.GameSprite);
                matcher.componentNames = TileComponentsLookup.componentNames;
                _matcherGameSprite = matcher;
            }

            return _matcherGameSprite;
        }
    }
}
