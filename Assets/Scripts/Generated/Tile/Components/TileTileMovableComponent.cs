//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TileEntity {

    static readonly TileMovableComponent tileMovableComponent = new TileMovableComponent();

    public bool isTileMovable {
        get { return HasComponent(TileComponentsLookup.TileMovable); }
        set {
            if(value != isTileMovable) {
                if(value) {
                    AddComponent(TileComponentsLookup.TileMovable, tileMovableComponent);
                } else {
                    RemoveComponent(TileComponentsLookup.TileMovable);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TileMatcher {

    static Entitas.IMatcher<TileEntity> _matcherTileMovable;

    public static Entitas.IMatcher<TileEntity> TileMovable {
        get {
            if(_matcherTileMovable == null) {
                var matcher = (Entitas.Matcher<TileEntity>)Entitas.Matcher<TileEntity>.AllOf(TileComponentsLookup.TileMovable);
                matcher.componentNames = TileComponentsLookup.componentNames;
                _matcherTileMovable = matcher;
            }

            return _matcherTileMovable;
        }
    }
}
