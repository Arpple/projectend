//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TileEntity {

    public SpawnpointComponent spawnpoint { get { return (SpawnpointComponent)GetComponent(TileComponentsLookup.Spawnpoint); } }
    public bool hasSpawnpoint { get { return HasComponent(TileComponentsLookup.Spawnpoint); } }

    public void AddSpawnpoint(int newIndex) {
        var index = TileComponentsLookup.Spawnpoint;
        var component = CreateComponent<SpawnpointComponent>(index);
        component.index = newIndex;
        AddComponent(index, component);
    }

    public void ReplaceSpawnpoint(int newIndex) {
        var index = TileComponentsLookup.Spawnpoint;
        var component = CreateComponent<SpawnpointComponent>(index);
        component.index = newIndex;
        ReplaceComponent(index, component);
    }

    public void RemoveSpawnpoint() {
        RemoveComponent(TileComponentsLookup.Spawnpoint);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TileMatcher {

    static Entitas.IMatcher<TileEntity> _matcherSpawnpoint;

    public static Entitas.IMatcher<TileEntity> Spawnpoint {
        get {
            if(_matcherSpawnpoint == null) {
                var matcher = (Entitas.Matcher<TileEntity>)Entitas.Matcher<TileEntity>.AllOf(TileComponentsLookup.Spawnpoint);
                matcher.componentNames = TileComponentsLookup.componentNames;
                _matcherSpawnpoint = matcher;
            }

            return _matcherSpawnpoint;
        }
    }
}
