//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TileEntity {

    public Game.ViewContainerComponent gameViewContainer { get { return (Game.ViewContainerComponent)GetComponent(TileComponentsLookup.GameViewContainer); } }
    public bool hasGameViewContainer { get { return HasComponent(TileComponentsLookup.GameViewContainer); } }

    public void AddGameViewContainer(string newContainerName) {
        var index = TileComponentsLookup.GameViewContainer;
        var component = CreateComponent<Game.ViewContainerComponent>(index);
        component.ContainerName = newContainerName;
        AddComponent(index, component);
    }

    public void ReplaceGameViewContainer(string newContainerName) {
        var index = TileComponentsLookup.GameViewContainer;
        var component = CreateComponent<Game.ViewContainerComponent>(index);
        component.ContainerName = newContainerName;
        ReplaceComponent(index, component);
    }

    public void RemoveGameViewContainer() {
        RemoveComponent(TileComponentsLookup.GameViewContainer);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TileMatcher {

    static Entitas.IMatcher<TileEntity> _matcherGameViewContainer;

    public static Entitas.IMatcher<TileEntity> GameViewContainer {
        get {
            if(_matcherGameViewContainer == null) {
                var matcher = (Entitas.Matcher<TileEntity>)Entitas.Matcher<TileEntity>.AllOf(TileComponentsLookup.GameViewContainer);
                matcher.componentNames = TileComponentsLookup.componentNames;
                _matcherGameViewContainer = matcher;
            }

            return _matcherGameViewContainer;
        }
    }
}
