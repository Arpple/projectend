//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TileEntity {

    public TileComponent tile { get { return (TileComponent)GetComponent(TileComponentsLookup.Tile); } }
    public bool hasTile { get { return HasComponent(TileComponentsLookup.Tile); } }

    public void AddTile(Tile newType) {
        var index = TileComponentsLookup.Tile;
        var component = CreateComponent<TileComponent>(index);
        component.Type = newType;
        AddComponent(index, component);
    }

    public void ReplaceTile(Tile newType) {
        var index = TileComponentsLookup.Tile;
        var component = CreateComponent<TileComponent>(index);
        component.Type = newType;
        ReplaceComponent(index, component);
    }

    public void RemoveTile() {
        RemoveComponent(TileComponentsLookup.Tile);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TileMatcher {

    static Entitas.IMatcher<TileEntity> _matcherTile;

    public static Entitas.IMatcher<TileEntity> Tile {
        get {
            if(_matcherTile == null) {
                var matcher = (Entitas.Matcher<TileEntity>)Entitas.Matcher<TileEntity>.AllOf(TileComponentsLookup.Tile);
                matcher.componentNames = TileComponentsLookup.componentNames;
                _matcherTile = matcher;
            }

            return _matcherTile;
        }
    }
}
