//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TileEntity {

    static readonly Game.TileMovableComponent gameTileMovableComponent = new Game.TileMovableComponent();

    public bool isGameTileMovable {
        get { return HasComponent(TileComponentsLookup.GameTileMovable); }
        set {
            if(value != isGameTileMovable) {
                if(value) {
                    AddComponent(TileComponentsLookup.GameTileMovable, gameTileMovableComponent);
                } else {
                    RemoveComponent(TileComponentsLookup.GameTileMovable);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TileMatcher {

    static Entitas.IMatcher<TileEntity> _matcherGameTileMovable;

    public static Entitas.IMatcher<TileEntity> GameTileMovable {
        get {
            if(_matcherGameTileMovable == null) {
                var matcher = (Entitas.Matcher<TileEntity>)Entitas.Matcher<TileEntity>.AllOf(TileComponentsLookup.GameTileMovable);
                matcher.componentNames = TileComponentsLookup.componentNames;
                _matcherGameTileMovable = matcher;
            }

            return _matcherGameTileMovable;
        }
    }
}
