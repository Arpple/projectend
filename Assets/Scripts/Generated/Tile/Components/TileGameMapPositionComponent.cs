//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class TileEntity {

    public Game.MapPositionComponent gameMapPosition { get { return (Game.MapPositionComponent)GetComponent(TileComponentsLookup.GameMapPosition); } }
    public bool hasGameMapPosition { get { return HasComponent(TileComponentsLookup.GameMapPosition); } }

    public void AddGameMapPosition(int newX, int newY) {
        var index = TileComponentsLookup.GameMapPosition;
        var component = CreateComponent<Game.MapPositionComponent>(index);
        component.x = newX;
        component.y = newY;
        AddComponent(index, component);
    }

    public void ReplaceGameMapPosition(int newX, int newY) {
        var index = TileComponentsLookup.GameMapPosition;
        var component = CreateComponent<Game.MapPositionComponent>(index);
        component.x = newX;
        component.y = newY;
        ReplaceComponent(index, component);
    }

    public void RemoveGameMapPosition() {
        RemoveComponent(TileComponentsLookup.GameMapPosition);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGenerator.MatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class TileMatcher {

    static Entitas.IMatcher<TileEntity> _matcherGameMapPosition;

    public static Entitas.IMatcher<TileEntity> GameMapPosition {
        get {
            if(_matcherGameMapPosition == null) {
                var matcher = (Entitas.Matcher<TileEntity>)Entitas.Matcher<TileEntity>.AllOf(TileComponentsLookup.GameMapPosition);
                matcher.componentNames = TileComponentsLookup.componentNames;
                _matcherGameMapPosition = matcher;
            }

            return _matcherGameMapPosition;
        }
    }
}
